version: '3.8'

services:
  # HTTP Server Service
  webserver:
    image: 'nginx:alpine'
    container_name: 'reminder-webserver'
    init: true
    restart: unless-stopped
    tty: true
    ports:
      - '${APP_PORT:-80}:80'
    volumes:
      - './:/var/www/reminder-service'
      - './docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf'
    networks:
      - reminder-network
    links:
      - app
    depends_on:
      - app

  # Main Application Service
  app:
    image: 'reminder/service'
    container_name: 'reminder-app'
    init: true
    restart: unless-stopped
    build:
      context: './docker/php'
      dockerfile: 'Dockerfile'
    working_dir: '/var/www/reminder-service'
    user: "www-data"
    volumes:
      - './:/var/www/reminder-service'
      - './docker/startup.sh:/usr/local/bin/startup.sh'
    networks:
      - reminder-network
    depends_on:
      - mariadb
      - redis

  # Database Service
  mariadb:
    image: 'mariadb:10'
    container_name: 'reminder-db'
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - '${PWD}/data/mariadb:/var/lib/mysql'
    networks:
      - reminder-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

  # Cache Service
  redis:
    image: 'redis:alpine'
    container_name: 'reminder-redis'
    init: true
    restart: unless-stopped
    command: 'redis-server --requirepass ${REDIS_PASSWORD}'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - '${PWD}/data/redis:/data'
    networks:
      - reminder-network
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      retries: 3
      timeout: 5s

  # Scheduler Service for running Laravel Scheduler
  scheduler:
    image: 'reminder/service'
    container_name: 'reminder-scheduler'
    init: true
    restart: unless-stopped
    build:
      context: './docker/php'
      dockerfile: 'Dockerfile'
    working_dir: '/var/www/reminder-service'
    volumes:
      - './:/var/www/reminder-service'
      - './docker/cron/scheduler:/etc/cron.d/scheduler'
    networks:
      - reminder-network
    command: >
      sh -c "
        echo '* * * * * cd /var/www/reminder-service && php artisan schedule:run >> /dev/null 2>&1' > /etc/cron.d/scheduler &&
        chmod 0644 /etc/cron.d/scheduler &&
        crontab /etc/cron.d/scheduler &&
        cron -f
      "
    depends_on:
      - app
      - mariadb
      - redis

  # Queue Worker Service for handling Laravel Queues
  queue:
    image: 'reminder/service'
    container_name: 'reminder-queue'
    init: true
    restart: unless-stopped
    build:
      context: './docker/php'
      dockerfile: 'Dockerfile'
    working_dir: '/var/www/reminder-service'
    volumes:
      - './:/var/www/reminder-service'
    networks:
      - reminder-network
    command: "php /var/www/reminder-service/artisan queue:work"
    depends_on:
      - app
      - mariadb
      - redis

  # MailHog for email testing
  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: 'reminder-mailhog'
    ports:
      - '${FORWARD_MAILHOG_PORT:-8025}:8025'
      - '${FORWARD_MAILHOG_SMTP_PORT:-1025}:1025'
    networks:
      - reminder-network

networks:
  reminder-network:
    driver: bridge
    name: reminder_network
